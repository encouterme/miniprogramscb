<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aode.dao.RegistrationMapper">
  <resultMap id="BaseResultMap" type="com.aode.bean.Registration">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_username" jdbcType="VARCHAR" property="userUsername" />
    <result column="user_grade" jdbcType="INTEGER" property="userGrade" />
    <result column="user_department" jdbcType="VARCHAR" property="userDepartment" />
    <result column="user_major" jdbcType="VARCHAR" property="userMajor" />
    <result column="user_phoneNum" jdbcType="VARCHAR" property="userPhonenum" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="
Is_pass" jdbcType="INTEGER" property="
isPass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_username, user_grade, user_department, user_major, user_phoneNum, user_email, 
    activity_id, 
Is_pass
  </sql>
  <select id="selectByExample" parameterType="com.aode.bean.RegistrationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from registration
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from registration
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aode.bean.RegistrationExample">
    delete from registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aode.bean.Registration">
    insert into registration (user_id, user_username, user_grade, 
      user_department, user_major, user_phoneNum, 
      user_email, activity_id, 
Is_pass
      )
    values (#{userId,jdbcType=INTEGER}, #{userUsername,jdbcType=VARCHAR}, #{userGrade,jdbcType=INTEGER}, 
      #{userDepartment,jdbcType=VARCHAR}, #{userMajor,jdbcType=VARCHAR}, #{userPhonenum,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{
isPass,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aode.bean.Registration">
    insert into registration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userUsername != null">
        user_username,
      </if>
      <if test="userGrade != null">
        user_grade,
      </if>
      <if test="userDepartment != null">
        user_department,
      </if>
      <if test="userMajor != null">
        user_major,
      </if>
      <if test="userPhonenum != null">
        user_phoneNum,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="
isPass != null">
        
Is_pass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userUsername != null">
        #{userUsername,jdbcType=VARCHAR},
      </if>
      <if test="userGrade != null">
        #{userGrade,jdbcType=INTEGER},
      </if>
      <if test="userDepartment != null">
        #{userDepartment,jdbcType=VARCHAR},
      </if>
      <if test="userMajor != null">
        #{userMajor,jdbcType=VARCHAR},
      </if>
      <if test="userPhonenum != null">
        #{userPhonenum,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="
isPass != null">
        #{
isPass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aode.bean.RegistrationExample" resultType="java.lang.Long">
    select count(*) from registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update registration
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userUsername != null">
        user_username = #{record.userUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.userGrade != null">
        user_grade = #{record.userGrade,jdbcType=INTEGER},
      </if>
      <if test="record.userDepartment != null">
        user_department = #{record.userDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.userMajor != null">
        user_major = #{record.userMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhonenum != null">
        user_phoneNum = #{record.userPhonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.
isPass != null">
        
Is_pass = #{record.
isPass,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update registration
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_username = #{record.userUsername,jdbcType=VARCHAR},
      user_grade = #{record.userGrade,jdbcType=INTEGER},
      user_department = #{record.userDepartment,jdbcType=VARCHAR},
      user_major = #{record.userMajor,jdbcType=VARCHAR},
      user_phoneNum = #{record.userPhonenum,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      
Is_pass = #{record.
isPass,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aode.bean.Registration">
    update registration
    <set>
      <if test="userUsername != null">
        user_username = #{userUsername,jdbcType=VARCHAR},
      </if>
      <if test="userGrade != null">
        user_grade = #{userGrade,jdbcType=INTEGER},
      </if>
      <if test="userDepartment != null">
        user_department = #{userDepartment,jdbcType=VARCHAR},
      </if>
      <if test="userMajor != null">
        user_major = #{userMajor,jdbcType=VARCHAR},
      </if>
      <if test="userPhonenum != null">
        user_phoneNum = #{userPhonenum,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="
isPass != null">
        
Is_pass = #{
isPass,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aode.bean.Registration">
    update registration
    set user_username = #{userUsername,jdbcType=VARCHAR},
      user_grade = #{userGrade,jdbcType=INTEGER},
      user_department = #{userDepartment,jdbcType=VARCHAR},
      user_major = #{userMajor,jdbcType=VARCHAR},
      user_phoneNum = #{userPhonenum,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=VARCHAR},
      
Is_pass = #{
isPass,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>